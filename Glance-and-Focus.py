# -*- coding: utf-8 -*-
"""B19EE046_EndSem_Part_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/196VEBx9RQPCQjE0lgRjhiyjN_P_0kOCD
"""

cd drive/MyDrive/EndSem_DL

!git clone https://github.com/blackfeather-wang/GFNet-Pytorch.git

cd GFNet-Pytorch

ls

!CUDA_VISIBLE_DEVICES=0 python inference.py --checkpoint_path '/content/drive/MyDrive/EndSem_DL/GFNet-Pytorch/resnet50_patch_size_96_T_5.pth.tar'  --eval_mode 0

torch.multiprocessing.set_sharing_strategy('file_system')
checkpoint = torch.load('/content/drive/MyDrive/EndSem_DL/GFNet-Pytorch/resnet50_patch_size_96_T_5.pth.tar', map_location='cpu')



import models.resnet as resnet
import models.densenet as densenet
from models import create_model

model_arch = checkpoint['model_name']
patch_size = checkpoint['patch_size']
prime_size = checkpoint['patch_size']
flops = checkpoint['flops']
model_flops = checkpoint['model_flops']
policy_flops = checkpoint['policy_flops']
fc_flops = checkpoint['fc_flops']
anytime_classification = checkpoint['anytime_classification']
budgeted_batch_classification = checkpoint['budgeted_batch_classification']
dynamic_threshold = checkpoint['dynamic_threshold']
maximum_length = len(checkpoint['flops'])
model_configuration = model_configurations[model_arch]

print(checkpoint)

!CUDA_VISIBLE_DEVICES=0 python inference.py --checkpoint_path '/content/drive/MyDrive/EndSem_DL/GFNet-Pytorch/mobilenetv3_large_100_patch_size_96_T_3.pth.tar'  --eval_mode 0

cd ..

cd GFNet-Pytorch

!pip install torch==1.8.1+cu111 torchvision==0.9.1+cu111 torchaudio==0.8.1 -f https://download.pytorch.org/whl/lts/1.8/torch_lts.html
!pip install torchtext==0.9.1

import torch
torch.__version__

!CUDA_VISIBLE_DEVICES=0 python train.py --data_url '/content/drive/MyDrive/DL_Assignment_2/tiny-imagenet-200/' --train_stage 1 --model_arch resnet50 --patch_size 96 --T 5 --print_freq 10 --model_prime_path '/content/drive/MyDrive/EndSem_DL/GFNet-Pytorch/resnet/Initialization_model_prime_resnet50_patch_size_96_or_128.pth'  --model_path '/content/drive/MyDrive/EndSem_DL/GFNet-Pytorch/resnet/Initialization_model_resnet50.pth'

!CUDA_VISIBLE_DEVICES=0 python train.py --data_url '/content/drive/MyDrive/DL_Assignment_2/tiny-imagenet-200/' --train_stage 2 --model_arch resnet50 --patch_size 96 --T 5 --print_freq 10 --checkpoint_path '/content/drive/MyDrive/EndSem_DL/GFNet-Pytorch/resnet/resnet50_patch_size_96_T_5_stage1.pth.tar'

!CUDA_VISIBLE_DEVICES=0 python train.py --data_url '/content/drive/MyDrive/DL_Assignment_2/tiny-imagenet-200/' --train_stage 3 --model_arch resnet50 --patch_size 96 --T 5 --print_freq 10 --checkpoint_path '/content/drive/MyDrive/EndSem_DL/GFNet-Pytorch/resnet/resnet50_patch_size_96_T_5_stage2.pth.tar'

!CUDA_VISIBLE_DEVICES=0,1,2,3 python train.py --data_url '/content/drive/MyDrive/DL_Assignment_2/tiny-imagenet-200/' --train_stage 1 --model_arch mobilenetv3_large_100 --patch_size 96 --T 5 --print_freq 10 --model_prime_path '/content/drive/MyDrive/EndSem_DL/GFNet-Pytorch/mobilenet-v3/Initialization_model_prime_mobilenetv3_large_100_patch_size_96.pth'  --model_path '/content/drive/MyDrive/EndSem_DL/GFNet-Pytorch/mobilenet-v3/Initialization_model_mobilenetv3_large_100.pth'

!CUDA_VISIBLE_DEVICES=0 python train.py --data_url '/content/drive/MyDrive/DL_Assignment_2/tiny-imagenet-200/' --train_stage 2 --model_arch mobilenetv3_large_100 --patch_size 96 --T 5 --print_freq 10 --checkpoint_path '/content/drive/MyDrive/EndSem_DL/GFNet-Pytorch/mobilenet-v3/mobilenetv3_large_100_patch_size_96_T_3_stage1.pth.tar'

!CUDA_VISIBLE_DEVICES=0 python train.py --data_url '/content/drive/MyDrive/DL_Assignment_2/tiny-imagenet-200/' --train_stage 3 --model_arch mobilenetv3_large_100 --patch_size 96 --T 5 --print_freq 10 --checkpoint_path '/content/drive/MyDrive/EndSem_DL/GFNet-Pytorch/mobilenet-v3/mobilenetv3_large_100_patch_size_96_T_3_stage2.pth.tar'
